// Mocks generated by Mockito 5.3.2 from annotations
// in sri_movil/test/features/matriculacion_vehicular/data/repositories/matriculacion_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:connectivity_plus/connectivity_plus.dart' as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sri_movil/core/errors/failures.dart' as _i5;
import 'package:sri_movil/core/network/network_info.dart' as _i7;
import 'package:sri_movil/features/matriculacion_vehicular/data/datasources/remote/matriculacion_remote_datasource.dart'
    as _i3;
import 'package:sri_movil/features/matriculacion_vehicular/data/models/info_vehiculo_model.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MatriculacionVehicularRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatriculacionVehicularRemoteDataSource extends _i1.Mock
    implements _i3.MatriculacionVehicularRemoteDataSource {
  MockMatriculacionVehicularRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.InfoVehiculoModel>>
      obtenerInformacionVehiculo({required String? idVehiculo}) =>
          (super.noSuchMethod(
            Invocation.method(
              #obtenerInformacionVehiculo,
              [],
              {#idVehiculo: idVehiculo},
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i6.InfoVehiculoModel>>.value(
                _FakeEither_0<_i5.Failure, _i6.InfoVehiculoModel>(
              this,
              Invocation.method(
                #obtenerInformacionVehiculo,
                [],
                {#idVehiculo: idVehiculo},
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i6.InfoVehiculoModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i8.ConnectivityResult> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i4.Future<_i8.ConnectivityResult>.value(
            _i8.ConnectivityResult.bluetooth),
      ) as _i4.Future<_i8.ConnectivityResult>);
}
